Ext.onReady(function() {
    // Save ExtJS state in cookie for 30 days
    Ext.state.Manager.setProvider(
      new Ext.state.CookieProvider({
          path: <%= app_path.to_json %>,
          secure: true,
          expires: new Date(new Date().getTime()+(1000*60*60*24*30))}));

    // Enable use of quick tips
    Ext.QuickTips.init();

    var dashboardPanel = {
      title: 'Graphiques',
      closable: false,
      items: [{html: '<p>Graphiques</p>'}]};

    var budgetPanel = {
      title: 'Budget',
      closable: false,
      items: [
      {
        xtype: 'panel',
        items: [
        new Ext.form.TextField({
            label: 'Server Response Code:',
            allowBlank: false,
            name: 'object[value]',
            emptyText:'200s = success, 200f = failure, 400-599 = server response',
            msgTarget: 'qtip',
            listeners: {
              change: function(me, newValue, oldValue) {
                var requestParams = {};
                requestParams[me.name] = me.getValue();

                // Prevent cascading changes until the field has been saved
                me.setDisabled(true);

                // Highlight the field that's saving for the user
                me.getEl().frame();

                Ext.Ajax.request({
                    url: <%= object_url(:id => 42).to_json %>,
                    method: 'put',
                    params: requestParams,
                    success: function(response, options) {
                      // Ext.decode parses a JSON string into a JS object
                      var result = Ext.decode(response.responseText);
                      if (result.success) {
                        // Successful, NOP
                      } else {
                        // Validation failure, ensure field is invalid and show squiggly lines
                        me.markInvalid(result.errors.toString());
                      }
                      me.setDisabled(false);
                    },
                    failure: function(response, options) {
                      // Server error, notify user
                      Ext.MessageBox.show({
                          title : 'Value unsaved',
                          msg : "The server returned: '" + response.responseText + "'",
                          buttons: this.OK,
                          closable: true,
                          icon: Ext.MessageBox.ERROR
                        });
                      me.setDisabled(false);
                    }
                  });
              }}
          }),
        new Ext.Button({
            text: 'Click Me!'
          })]
      },
      {html: '<p>Budget</p>'}]};

    // The main panel, where everything is
    var mainPanel = new Ext.TabPanel({
        id: 'main-panel',
        renderTo: Ext.getBody(),
        minTabWidth: 115,
        tabWidth:135,
        enableTabScroll:true,
        autoHeight: true,
        defaults: {autoScroll:true},
        plugins: new Ext.ux.TabCloseMenu(),
        activeTab: 0, // Ensure dashboard is selected on initial render
        items: [
          dashboardPanel, budgetPanel]
      });
  });
